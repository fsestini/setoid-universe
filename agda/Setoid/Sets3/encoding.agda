{-# OPTIONS --prop --without-K #-}

module Setoid.Sets3.encoding where

open import Setoid.lib
open import Setoid.Sets3.mini-univ
open import Relation.Binary.PropositionalEquality

variable
  A : U
  B : El A ‚Üí U
  A‚ÇÄ A‚ÇÅ : U
  A~ : El A -> El A -> P
  A‚ÇÄ~ : El A‚ÇÄ ‚Üí El A‚ÇÄ ‚Üí P
  A‚ÇÅ~ : El A‚ÇÅ ‚Üí El A‚ÇÅ ‚Üí P
  A‚ÇÄ‚ÇÅ : El A‚ÇÄ ‚Üí El A‚ÇÅ ‚Üí P
  B‚ÇÄ : El A‚ÇÄ ‚Üí U
  B‚ÇÅ : El A‚ÇÅ ‚Üí U

data in-U‚Çö : U ‚Üí Set‚ÇÅ
data in-U~‚Çö : (A‚ÇÄ A‚ÇÅ : U)(A‚ÇÄ‚ÇÅ : El A‚ÇÄ ‚Üí El A‚ÇÅ ‚Üí P) ‚Üí Set‚ÇÅ

data in-U‚Çö where
  bool‚Çö : in-U‚Çö ùüö-U
  œÄ‚Çö : (a‚Çö : in-U‚Çö A) (a~‚Çö : in-U~‚Çö A A A~)
       (b‚Çö : (x : El A) ‚Üí in-U‚Çö (B x))
       {B~ : {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí El (B x‚ÇÄ) ‚Üí El (B x‚ÇÅ) ‚Üí P}
       (b~‚Çö : {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~‚Çö (B x‚ÇÄ) (B x‚ÇÅ)(B~ x‚ÇÄ‚ÇÅ))
     ‚Üí in-U‚Çö (Œ£sp-U A B A~ B~)

data in-U~‚Çö where
  bool~‚Çö : in-U~‚Çö ùüö-U ùüö-U _‚âüùüö-P_
  œÄ~‚Çö :
    (a‚ÇÄ : in-U‚Çö A‚ÇÄ)(a‚ÇÄ~ : in-U~‚Çö A‚ÇÄ A‚ÇÄ A‚ÇÄ~)
    (a‚ÇÅ : in-U‚Çö A‚ÇÅ)(a‚ÇÅ~ : in-U~‚Çö A‚ÇÅ A‚ÇÅ A‚ÇÅ~)
    (a‚ÇÄ‚ÇÅ : in-U~‚Çö A‚ÇÄ A‚ÇÅ A‚ÇÄ‚ÇÅ)
    (b‚ÇÄ : (x : El A‚ÇÄ) ‚Üí in-U‚Çö (B‚ÇÄ x))
      {B‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : El A‚ÇÄ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÄ~ x‚ÇÄ x‚ÇÅ)) ‚Üí El (B‚ÇÄ x‚ÇÄ) ‚Üí El (B‚ÇÄ x‚ÇÅ) ‚Üí P}
      (b‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : El A‚ÇÄ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÄ~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~‚Çö (B‚ÇÄ x‚ÇÄ) (B‚ÇÄ x‚ÇÅ) (B‚ÇÄ~ x‚ÇÄ‚ÇÅ))
    (b‚ÇÅ : (x : El A‚ÇÅ) ‚Üí in-U‚Çö (B‚ÇÅ x))
      {B‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : El A‚ÇÅ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÅ~ x‚ÇÄ x‚ÇÅ)) ‚Üí El (B‚ÇÅ x‚ÇÄ) ‚Üí El (B‚ÇÅ x‚ÇÅ) ‚Üí P}
      (b‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : El A‚ÇÅ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÅ~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~‚Çö (B‚ÇÅ x‚ÇÄ) (B‚ÇÅ x‚ÇÅ) (B‚ÇÅ~ x‚ÇÄ‚ÇÅ))
    {B‚ÇÄ‚ÇÅ : {x‚ÇÄ : El A‚ÇÄ}{x‚ÇÅ : El A‚ÇÅ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ)) ‚Üí El (B‚ÇÄ x‚ÇÄ) ‚Üí El (B‚ÇÅ x‚ÇÅ) ‚Üí P}
    (b‚ÇÄ‚ÇÅ : {x‚ÇÄ : El A‚ÇÄ}{x‚ÇÅ : El A‚ÇÅ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~‚Çö (B‚ÇÄ x‚ÇÄ) (B‚ÇÅ x‚ÇÅ) (B‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ)) ‚Üí 
    in-U~‚Çö
      (Œ£sp-U A‚ÇÄ B‚ÇÄ A‚ÇÄ~ B‚ÇÄ~)
      (Œ£sp-U A‚ÇÅ B‚ÇÅ A‚ÇÅ~ B‚ÇÅ~)
      Œª x y ‚Üí fun-‚â°-P A‚ÇÄ A‚ÇÅ A‚ÇÄ‚ÇÅ B‚ÇÄ B‚ÇÅ B‚ÇÄ‚ÇÅ (proj‚ÇÅsp x) (proj‚ÇÅsp y)

invert-œÄ‚Çö : {A : U} {a‚Çö a‚Çö' : in-U‚Çö A} {A~ : El A ‚Üí El A ‚Üí P} {a~‚Çö a~‚Çö' : in-U~‚Çö _ _ A~}
           {B : El A ‚Üí U} {b‚Çö b‚Çö' : (x : El A) -> in-U‚Çö (B x)}
           {B~ : {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí El (B x‚ÇÄ) ‚Üí El (B x‚ÇÅ) ‚Üí P}
           {b~‚Çö b~‚Çö' : {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~‚Çö _ _ (B~ x‚ÇÄ‚ÇÅ)}
          ‚Üí œÄ‚Çö a‚Çö a~‚Çö b‚Çö b~‚Çö ‚â° œÄ‚Çö a‚Çö' a~‚Çö' b‚Çö' b~‚Çö'
          ‚Üí (a‚Çö ‚â° a‚Çö')
          √ó (a~‚Çö ‚â° a~‚Çö')
          √ó (b‚Çö ‚â° b‚Çö')
          √ó (_‚â°_ {A = {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~‚Çö _ _ (B~ x‚ÇÄ‚ÇÅ)} b~‚Çö b~‚Çö')
invert-œÄ‚Çö refl = ((refl ,Œ£ refl) ,Œ£ refl) ,Œ£ refl

data in-U‚Çú : {A : U} ‚Üí in-U‚Çö A ‚Üí Prop‚ÇÅ
data in-U~‚Çú : (A‚ÇÄ A‚ÇÅ : U) (a‚ÇÄ : in-U‚Çö A‚ÇÄ)(a‚ÇÅ : in-U‚Çö A‚ÇÅ){A‚ÇÄ‚ÇÅ : El A‚ÇÄ ‚Üí El A‚ÇÅ ‚Üí P} ‚Üí in-U~‚Çö A‚ÇÄ A‚ÇÅ A‚ÇÄ‚ÇÅ ‚Üí Prop‚ÇÅ

data in-U‚Çú where
  bool‚Çú : in-U‚Çú bool‚Çö
  œÄ‚Çú :
    {a‚Çö : in-U‚Çö A}(a : in-U‚Çú a‚Çö){a~‚Çö : in-U~‚Çö A A A~}(a~ : in-U~‚Çú A A a‚Çö a‚Çö a~‚Çö)
    {b‚Çö : (x : El A) ‚Üí in-U‚Çö (B x)}(b : (x : El A) ‚Üí in-U‚Çú (b‚Çö x))
    {B~ : {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí El (B x‚ÇÄ) ‚Üí El (B x‚ÇÅ) ‚Üí P}
    {b~‚Çö : {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~‚Çö (B x‚ÇÄ) (B x‚ÇÅ)(B~ x‚ÇÄ‚ÇÅ)} ‚Üí
    (b~ : {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~‚Çú (B x‚ÇÄ) (B x‚ÇÅ) (b‚Çö x‚ÇÄ) (b‚Çö x‚ÇÅ) (b~‚Çö x‚ÇÄ‚ÇÅ)) ‚Üí
    in-U‚Çú (œÄ‚Çö a‚Çö a~‚Çö b‚Çö b~‚Çö)

data in-U~‚Çú where
  bool~‚Çú : in-U~‚Çú ùüö-U ùüö-U bool‚Çö bool‚Çö bool~‚Çö
  œÄ~‚Çú :
    {a‚ÇÄ‚Çö : in-U‚Çö A‚ÇÄ}(a‚ÇÄ : in-U‚Çú a‚ÇÄ‚Çö)
    {a‚ÇÄ~‚Çö : in-U~‚Çö A‚ÇÄ A‚ÇÄ A‚ÇÄ~}(a‚ÇÄ~ : in-U~‚Çú A‚ÇÄ A‚ÇÄ a‚ÇÄ‚Çö a‚ÇÄ‚Çö a‚ÇÄ~‚Çö)
    {a‚ÇÅ‚Çö : in-U‚Çö A‚ÇÅ}(a‚ÇÅ : in-U‚Çú a‚ÇÅ‚Çö)
    {a‚ÇÅ~‚Çö : in-U~‚Çö A‚ÇÅ A‚ÇÅ A‚ÇÅ~}(a‚ÇÅ~ : in-U~‚Çú A‚ÇÅ A‚ÇÅ a‚ÇÅ‚Çö a‚ÇÅ‚Çö a‚ÇÅ~‚Çö)
    {a‚ÇÄ‚ÇÅ‚Çö : in-U~‚Çö A‚ÇÄ A‚ÇÅ A‚ÇÄ‚ÇÅ}(a‚ÇÄ‚ÇÅ : in-U~‚Çú A‚ÇÄ A‚ÇÅ a‚ÇÄ‚Çö a‚ÇÅ‚Çö a‚ÇÄ‚ÇÅ‚Çö)
    {b‚ÇÄ‚Çö : (x : El A‚ÇÄ) ‚Üí in-U‚Çö (B‚ÇÄ x)}(b‚ÇÄ : (x : El A‚ÇÄ) ‚Üí in-U‚Çú (b‚ÇÄ‚Çö x))
    {B‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : El A‚ÇÄ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÄ~ x‚ÇÄ x‚ÇÅ)) ‚Üí El (B‚ÇÄ x‚ÇÄ) ‚Üí El (B‚ÇÄ x‚ÇÅ) ‚Üí P}
    {b‚ÇÄ~‚Çö : {x‚ÇÄ x‚ÇÅ : El A‚ÇÄ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÄ~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~‚Çö (B‚ÇÄ x‚ÇÄ) (B‚ÇÄ x‚ÇÅ) (B‚ÇÄ~ x‚ÇÄ‚ÇÅ)}
    (b‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : El A‚ÇÄ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÄ~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~‚Çú (B‚ÇÄ x‚ÇÄ) (B‚ÇÄ x‚ÇÅ) (b‚ÇÄ‚Çö x‚ÇÄ) (b‚ÇÄ‚Çö x‚ÇÅ) (b‚ÇÄ~‚Çö x‚ÇÄ‚ÇÅ))
    {b‚ÇÅ‚Çö : (x : El A‚ÇÅ) ‚Üí in-U‚Çö (B‚ÇÅ x)}(b‚ÇÅ : (x : El A‚ÇÅ) ‚Üí in-U‚Çú (b‚ÇÅ‚Çö x))
    {B‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : El A‚ÇÅ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÅ~ x‚ÇÄ x‚ÇÅ)) ‚Üí El (B‚ÇÅ x‚ÇÄ) ‚Üí El (B‚ÇÅ x‚ÇÅ) ‚Üí P}
    {b‚ÇÅ~‚Çö : {x‚ÇÄ x‚ÇÅ : El A‚ÇÅ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÅ~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~‚Çö (B‚ÇÅ x‚ÇÄ) (B‚ÇÅ x‚ÇÅ) (B‚ÇÅ~ x‚ÇÄ‚ÇÅ)}
    (b‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : El A‚ÇÅ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÅ~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~‚Çú (B‚ÇÅ x‚ÇÄ) (B‚ÇÅ x‚ÇÅ) (b‚ÇÅ‚Çö x‚ÇÄ) (b‚ÇÅ‚Çö x‚ÇÅ) (b‚ÇÅ~‚Çö x‚ÇÄ‚ÇÅ))
    {B‚ÇÄ‚ÇÅ : {x‚ÇÄ : El A‚ÇÄ}{x‚ÇÅ : El A‚ÇÅ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ)) ‚Üí El (B‚ÇÄ x‚ÇÄ) ‚Üí El (B‚ÇÅ x‚ÇÅ) ‚Üí P}
    {b‚ÇÄ‚ÇÅ‚Çö : {x‚ÇÄ : El A‚ÇÄ}{x‚ÇÅ : El A‚ÇÅ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~‚Çö (B‚ÇÄ x‚ÇÄ) (B‚ÇÅ x‚ÇÅ) (B‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ)}
    (b‚ÇÄ‚ÇÅ : {x‚ÇÄ : El A‚ÇÄ}{x‚ÇÅ : El A‚ÇÅ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~‚Çú (B‚ÇÄ x‚ÇÄ) (B‚ÇÅ x‚ÇÅ) (b‚ÇÄ‚Çö x‚ÇÄ) (b‚ÇÅ‚Çö x‚ÇÅ) (b‚ÇÄ‚ÇÅ‚Çö x‚ÇÄ‚ÇÅ)) ‚Üí
    in-U~‚Çú
      (Œ£sp-U A‚ÇÄ B‚ÇÄ A‚ÇÄ~ B‚ÇÄ~)
      (Œ£sp-U A‚ÇÅ B‚ÇÅ A‚ÇÅ~ B‚ÇÅ~)
      (œÄ‚Çö a‚ÇÄ‚Çö a‚ÇÄ~‚Çö b‚ÇÄ‚Çö b‚ÇÄ~‚Çö) (œÄ‚Çö a‚ÇÅ‚Çö a‚ÇÅ~‚Çö b‚ÇÅ‚Çö b‚ÇÅ~‚Çö)
      (œÄ~‚Çö a‚ÇÄ‚Çö a‚ÇÄ~‚Çö a‚ÇÅ‚Çö a‚ÇÅ~‚Çö a‚ÇÄ‚ÇÅ‚Çö b‚ÇÄ‚Çö b‚ÇÄ~‚Çö b‚ÇÅ‚Çö b‚ÇÅ~‚Çö b‚ÇÄ‚ÇÅ‚Çö)

in-U : U -> Set‚ÇÅ
in-U x = Œ£sp (in-U‚Çö x) in-U‚Çú

in-U~ : (A‚ÇÄ A‚ÇÅ : U) (a‚ÇÄ : in-U A‚ÇÄ)(a‚ÇÅ : in-U A‚ÇÅ)(A‚ÇÄ‚ÇÅ : El A‚ÇÄ -> El A‚ÇÅ -> P) ‚Üí Set‚ÇÅ
in-U~ A‚ÇÄ A‚ÇÅ a‚ÇÄ a‚ÇÅ A‚ÇÄ‚ÇÅ = Œ£sp (in-U~‚Çö A‚ÇÄ A‚ÇÅ A‚ÇÄ‚ÇÅ) (in-U~‚Çú A‚ÇÄ A‚ÇÅ (proj‚ÇÅsp a‚ÇÄ) (proj‚ÇÅsp a‚ÇÅ))

bool : in-U ùüö-U
bool = bool‚Çö ,sp bool‚Çú

œÄ : {A : U}(a : in-U A){A~ : El A -> El A -> P}(a~ : in-U~ A A a a A~)
    {B : El A -> U}
    (b : (x : El A) ‚Üí in-U (B x))
    {B~ : {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí El (B x‚ÇÄ) ‚Üí El (B x‚ÇÅ) ‚Üí P}
    (b~ : {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~ (B x‚ÇÄ) (B x‚ÇÅ) (b x‚ÇÄ) (b x‚ÇÅ) (B~ x‚ÇÄ‚ÇÅ))
   ‚Üí in-U (Œ£sp-U A B A~ B~)
œÄ (a‚Çö ,sp a) (a~‚Çö ,sp a~) b b~ =
  œÄ‚Çö a‚Çö a~‚Çö (Œª x ‚Üí proj‚ÇÅsp (b x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÅsp (b~ x‚ÇÄ‚ÇÅ)) ,sp
  œÄ‚Çú a a~ (Œª x ‚Üí proj‚ÇÇsp (b x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÇsp (b~ x‚ÇÄ‚ÇÅ))

bool~ : in-U~ ùüö-U ùüö-U bool bool (Œª x‚ÇÄ x‚ÇÅ ‚Üí x‚ÇÄ ‚âüùüö-P x‚ÇÅ)
bool~ = bool~‚Çö ,sp bool~‚Çú

œÄ~ : {A‚ÇÄ : U}{a‚ÇÄ : in-U A‚ÇÄ}{A‚ÇÄ~ : El A‚ÇÄ ‚Üí El A‚ÇÄ ‚Üí P}{a‚ÇÄ~ : in-U~ A‚ÇÄ A‚ÇÄ a‚ÇÄ a‚ÇÄ A‚ÇÄ~}
     {A‚ÇÅ : U}{a‚ÇÅ : in-U A‚ÇÅ}{A‚ÇÅ~ : El A‚ÇÅ ‚Üí El A‚ÇÅ ‚Üí P}{a‚ÇÅ~ : in-U~ A‚ÇÅ A‚ÇÅ a‚ÇÅ a‚ÇÅ A‚ÇÅ~}
     {A‚ÇÄ‚ÇÅ : El A‚ÇÄ ‚Üí El A‚ÇÅ ‚Üí P}(a‚ÇÄ‚ÇÅ : in-U~ A‚ÇÄ A‚ÇÅ a‚ÇÄ a‚ÇÅ A‚ÇÄ‚ÇÅ)

     {B‚ÇÄ : El A‚ÇÄ ‚Üí U}{b‚ÇÄ : (x‚ÇÄ : El A‚ÇÄ) ‚Üí in-U (B‚ÇÄ x‚ÇÄ)}
       {B‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : El A‚ÇÄ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÄ~ x‚ÇÄ x‚ÇÅ)) ‚Üí El (B‚ÇÄ x‚ÇÄ) ‚Üí El (B‚ÇÄ x‚ÇÅ) ‚Üí P}
       {b‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : El A‚ÇÄ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÄ~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~ (B‚ÇÄ x‚ÇÄ) (B‚ÇÄ x‚ÇÅ) (b‚ÇÄ x‚ÇÄ) (b‚ÇÄ x‚ÇÅ) (B‚ÇÄ~ x‚ÇÄ‚ÇÅ)}
     {B‚ÇÅ : El A‚ÇÅ ‚Üí U}{b‚ÇÅ : (x‚ÇÅ : El A‚ÇÅ) ‚Üí in-U (B‚ÇÅ x‚ÇÅ)}
       {B‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : El A‚ÇÅ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÅ~ x‚ÇÄ x‚ÇÅ)) ‚Üí El (B‚ÇÅ x‚ÇÄ) ‚Üí El (B‚ÇÅ x‚ÇÅ) ‚Üí P}
       {b‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : El A‚ÇÅ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÅ~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~ (B‚ÇÅ x‚ÇÄ) (B‚ÇÅ x‚ÇÅ) (b‚ÇÅ x‚ÇÄ) (b‚ÇÅ x‚ÇÅ) (B‚ÇÅ~ x‚ÇÄ‚ÇÅ)}
     {B‚ÇÄ‚ÇÅ : {x‚ÇÄ : El A‚ÇÄ}{x‚ÇÅ : El A‚ÇÅ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ)) ‚Üí El (B‚ÇÄ x‚ÇÄ) ‚Üí El (B‚ÇÅ x‚ÇÅ) ‚Üí P}
     (b‚ÇÄ‚ÇÅ : {x‚ÇÄ : El A‚ÇÄ}{x‚ÇÅ : El A‚ÇÅ}(x‚ÇÄ‚ÇÅ : ElP (A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~ (B‚ÇÄ x‚ÇÄ) (B‚ÇÅ x‚ÇÅ) (b‚ÇÄ x‚ÇÄ) (b‚ÇÅ x‚ÇÅ) (B‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ))
      
     ‚Üí in-U~ _ _ (œÄ a‚ÇÄ a‚ÇÄ~ b‚ÇÄ {B‚ÇÄ~} b‚ÇÄ~) (œÄ a‚ÇÅ a‚ÇÅ~ b‚ÇÅ {B‚ÇÅ~} b‚ÇÅ~) _
œÄ~ {A‚ÇÄ}{a‚ÇÄ‚Çö ,sp a‚ÇÄ}{A‚ÇÄ~}{a‚ÇÄ~‚Çö ,sp a‚ÇÄ~}{A‚ÇÅ}{a‚ÇÅ‚Çö ,sp a‚ÇÅ}{A‚ÇÅ~}{a‚ÇÅ~‚Çö ,sp a‚ÇÅ~}{A‚ÇÄ‚ÇÅ}(a‚ÇÄ‚ÇÅ‚Çö ,sp a‚ÇÄ‚ÇÅ){B‚ÇÄ}{b‚ÇÄ}{B‚ÇÄ~}{b‚ÇÄ~}{B‚ÇÅ}{b‚ÇÅ}{B‚ÇÅ~}{b‚ÇÅ~}{B‚ÇÄ‚ÇÅ} b‚ÇÄ‚ÇÅ =
  œÄ~‚Çö a‚ÇÄ‚Çö a‚ÇÄ~‚Çö a‚ÇÅ‚Çö a‚ÇÅ~‚Çö a‚ÇÄ‚ÇÅ‚Çö (Œª x ‚Üí proj‚ÇÅsp (b‚ÇÄ x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÅsp (b‚ÇÄ~ x‚ÇÄ‚ÇÅ)) (Œª x ‚Üí proj‚ÇÅsp (b‚ÇÅ x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÅsp (b‚ÇÅ~ x‚ÇÄ‚ÇÅ)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÅsp (b‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ)) ,sp
  œÄ~‚Çú a‚ÇÄ a‚ÇÄ~ a‚ÇÅ a‚ÇÅ~ a‚ÇÄ‚ÇÅ (Œª x ‚Üí proj‚ÇÇsp (b‚ÇÄ x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÇsp (b‚ÇÄ~ x‚ÇÄ‚ÇÅ)) (Œª x ‚Üí proj‚ÇÇsp (b‚ÇÅ x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÇsp (b‚ÇÅ~ x‚ÇÄ‚ÇÅ)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÇsp (b‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ))

-- invert-œÄ : {A : U} {a a' : in-U A} {A~ : El A ‚Üí El A ‚Üí P} {a~ : in-U~ _ _ a a A~} {a~' : in-U~ _ _ a' a' A~}
--            {B : El A ‚Üí U} {b b' : (x : El A) -> in-U (B x)}
--            {B~ : {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí El (B x‚ÇÄ) ‚Üí El (B x‚ÇÅ) ‚Üí P}
--            {b~ : {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~ _ _ (b x‚ÇÄ) (b x‚ÇÅ) (B~ x‚ÇÄ‚ÇÅ)}
--            {b~' : {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~ _ _ (b' x‚ÇÄ) (b' x‚ÇÅ) (B~ x‚ÇÄ‚ÇÅ)}
--           ‚Üí œÄ a a~ b b~ ‚â° œÄ a' a~' b' b~'
--           ‚Üí Œ£ (a ‚â° a') Œª e ‚Üí Œ£ (b ‚â° b') Œª e'
--           ‚Üí (subst (Œª x ‚Üí in-U~ A A x x A~) e a~ ‚â° a~')
--           √ó (_‚â°_ {A = {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~ _ _ (b' x‚ÇÄ) (b' x‚ÇÅ) (B~ x‚ÇÄ‚ÇÅ)}
--                  (subst (Œª x ‚Üí {x‚ÇÄ x‚ÇÅ : El A}(x‚ÇÄ‚ÇÅ : ElP (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí in-U~ _ _ (x x‚ÇÄ) (x x‚ÇÅ) (B~ x‚ÇÄ‚ÇÅ)) e' b~) b~')
-- invert-œÄ {A} {a‚Çö ,sp a‚Çú} {a‚Çö' ,sp a‚Çú'}
--          {A~} {a~‚Çö ,sp a~‚Çú} {a~‚Çö' ,sp a~‚Çú'}
--              eq = goal {!proj‚ÇÇ (invert-œÄ‚Çö (cong proj‚ÇÅsp eq))!} {!!}
--   where
--     goal : a‚Çö ‚â° a‚Çö' -> a~‚Çö ‚â° a~‚Çö' -> _
--     goal refl refl = refl ,Œ£ ({!!} ,Œ£ (refl ,Œ£ {!!}))
-- -- rewrite proj‚ÇÅ (proj‚ÇÅ (proj‚ÇÅ (invert-œÄ‚Çö (cong proj‚ÇÅsp eq)))) = {!!} ,Œ£ {!!}
