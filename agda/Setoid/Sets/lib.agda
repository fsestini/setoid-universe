{-# OPTIONS --without-K --prop #-}

module Setoid.Sets.lib where

-- constructing in-U and in-U~ using preterms and a typing relation

open import Setoid.lib

-- Sets1

data in-U‚Çö : Set ‚Üí Set‚ÇÅ
data in-U~‚Çö : {A‚ÇÄ A‚ÇÅ : Set}(A‚ÇÄ‚ÇÅ : A‚ÇÄ ‚Üí A‚ÇÅ ‚Üí Prop) ‚Üí Set‚ÇÅ

data in-U‚Çö where
  bool‚Çö : in-U‚Çö ùüö
  œÄ‚Çö :
    {A : Set}(a‚Çö : in-U‚Çö A){A~ : A ‚Üí A ‚Üí Prop}(a~‚Çö : in-U~‚Çö A~)
    {B : A ‚Üí Set}(b‚Çö : (x : A) ‚Üí in-U‚Çö (B x))
    {B~ : {x‚ÇÄ x‚ÇÅ : A}(x‚ÇÄ‚ÇÅ : A~ x‚ÇÄ x‚ÇÅ) ‚Üí B x‚ÇÄ ‚Üí B x‚ÇÅ ‚Üí Prop}
    (b~‚Çö : {x‚ÇÄ x‚ÇÅ : A}(x‚ÇÄ‚ÇÅ : A~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~‚Çö (B~ x‚ÇÄ‚ÇÅ)) ‚Üí 
    in-U‚Çö (Œ£sp ((x : A) ‚Üí B x) (Œª f ‚Üí (x‚ÇÄ x‚ÇÅ : A)(x‚ÇÄ‚ÇÅ : ‚Üëps (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí B~ (un‚Üëps x‚ÇÄ‚ÇÅ) (f x‚ÇÄ) (f x‚ÇÅ)))

data in-U~‚Çö where
  bool~‚Çö : in-U~‚Çö Œª x‚ÇÄ x‚ÇÅ ‚Üí x‚ÇÄ ‚âüùüö x‚ÇÅ
  œÄ~‚Çö :
    {A‚ÇÄ : Set}(a‚ÇÄ : in-U‚Çö A‚ÇÄ){A‚ÇÄ~ : A‚ÇÄ ‚Üí A‚ÇÄ ‚Üí Prop}(a‚ÇÄ~ : in-U~‚Çö A‚ÇÄ~)
    {A‚ÇÅ : Set}(a‚ÇÅ : in-U‚Çö A‚ÇÅ){A‚ÇÅ~ : A‚ÇÅ ‚Üí A‚ÇÅ ‚Üí Prop}(a‚ÇÅ~ : in-U~‚Çö A‚ÇÅ~)
    {A‚ÇÄ‚ÇÅ : A‚ÇÄ ‚Üí A‚ÇÅ ‚Üí Prop}(a‚ÇÄ‚ÇÅ : in-U~‚Çö A‚ÇÄ‚ÇÅ)

    {B‚ÇÄ : A‚ÇÄ ‚Üí Set}(b‚ÇÄ : (x : A‚ÇÄ) ‚Üí in-U‚Çö (B‚ÇÄ x))
      {B‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÄ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ~ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÄ x‚ÇÄ ‚Üí B‚ÇÄ x‚ÇÅ ‚Üí Prop}
      (b‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÄ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~‚Çö (B‚ÇÄ~ x‚ÇÄ‚ÇÅ))
    {B‚ÇÅ : A‚ÇÅ ‚Üí Set}(b‚ÇÅ : (x : A‚ÇÅ) ‚Üí in-U‚Çö (B‚ÇÅ x))
      {B‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÅ~ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÅ x‚ÇÄ ‚Üí B‚ÇÅ x‚ÇÅ ‚Üí Prop}
      (b‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÅ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~‚Çö (B‚ÇÅ~ x‚ÇÄ‚ÇÅ))
    {B‚ÇÄ‚ÇÅ : {x‚ÇÄ : A‚ÇÄ}{x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÄ x‚ÇÄ ‚Üí B‚ÇÅ x‚ÇÅ ‚Üí Prop}
    (b‚ÇÄ‚ÇÅ : {x‚ÇÄ : A‚ÇÄ}{x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~‚Çö (B‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ)) ‚Üí 
     
    in-U~‚Çö
      {Œ£sp ((x : A‚ÇÄ) ‚Üí B‚ÇÄ x) (Œª f ‚Üí (x‚ÇÄ x‚ÇÅ : A‚ÇÄ)(x‚ÇÄ‚ÇÅ : ‚Üëps (A‚ÇÄ~ x‚ÇÄ x‚ÇÅ)) ‚Üí B‚ÇÄ~ (un‚Üëps x‚ÇÄ‚ÇÅ) (f x‚ÇÄ) (f x‚ÇÅ))}
      {Œ£sp ((x : A‚ÇÅ) ‚Üí B‚ÇÅ x) (Œª f ‚Üí (x‚ÇÄ x‚ÇÅ : A‚ÇÅ)(x‚ÇÄ‚ÇÅ : ‚Üëps (A‚ÇÅ~ x‚ÇÄ x‚ÇÅ)) ‚Üí B‚ÇÅ~ (un‚Üëps x‚ÇÄ‚ÇÅ) (f x‚ÇÄ) (f x‚ÇÅ))}
      (Œª {(f‚ÇÄ ,sp f‚ÇÄ~) (f‚ÇÅ ,sp f‚ÇÅ~) ‚Üí (x‚ÇÄ : A‚ÇÄ)(x‚ÇÅ : A‚ÇÅ)(x‚ÇÄ‚ÇÅ : ‚Üëps (A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ)) ‚Üí B‚ÇÄ‚ÇÅ (un‚Üëps x‚ÇÄ‚ÇÅ) (f‚ÇÄ x‚ÇÄ) (f‚ÇÅ x‚ÇÅ)})

data in-U‚Çú : {A : Set} ‚Üí in-U‚Çö A ‚Üí Prop‚ÇÅ
data in-U~‚Çú : {A‚ÇÄ A‚ÇÅ : Set}(a‚ÇÄ : in-U‚Çö A‚ÇÄ)(a‚ÇÅ : in-U‚Çö A‚ÇÅ){A‚ÇÄ‚ÇÅ : A‚ÇÄ ‚Üí A‚ÇÅ ‚Üí Prop} ‚Üí in-U~‚Çö A‚ÇÄ‚ÇÅ ‚Üí Prop‚ÇÅ

data in-U‚Çú where
  bool‚Çú : in-U‚Çú bool‚Çö
  œÄ‚Çú :
    {A : Set}{a‚Çö : in-U‚Çö A}(a : in-U‚Çú a‚Çö){A~ : A ‚Üí A ‚Üí Prop}{a~‚Çö : in-U~‚Çö A~}(a~ : in-U~‚Çú a‚Çö a‚Çö a~‚Çö)
    {B : A ‚Üí Set}{b‚Çö : (x : A) ‚Üí in-U‚Çö (B x)}(b : (x : A) ‚Üí in-U‚Çú (b‚Çö x))
    {B~ : {x‚ÇÄ x‚ÇÅ : A}(x‚ÇÄ‚ÇÅ : A~ x‚ÇÄ x‚ÇÅ) ‚Üí B x‚ÇÄ ‚Üí B x‚ÇÅ ‚Üí Prop}
    {b~‚Çö : {x‚ÇÄ x‚ÇÅ : A}(x‚ÇÄ‚ÇÅ : A~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~‚Çö (B~ x‚ÇÄ‚ÇÅ)} ‚Üí
    (b~ : {x‚ÇÄ x‚ÇÅ : A}(x‚ÇÄ‚ÇÅ : A~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~‚Çú (b‚Çö x‚ÇÄ) (b‚Çö x‚ÇÅ) (b~‚Çö x‚ÇÄ‚ÇÅ)) ‚Üí
    in-U‚Çú (œÄ‚Çö a‚Çö a~‚Çö b‚Çö b~‚Çö)

data in-U~‚Çú where
  bool~‚Çú : in-U~‚Çú bool‚Çö bool‚Çö bool~‚Çö
  œÄ~‚Çú :
    {A‚ÇÄ : Set}{a‚ÇÄ‚Çö : in-U‚Çö A‚ÇÄ}(a‚ÇÄ : in-U‚Çú a‚ÇÄ‚Çö){A‚ÇÄ~ : A‚ÇÄ ‚Üí A‚ÇÄ ‚Üí Prop}{a‚ÇÄ~‚Çö : in-U~‚Çö A‚ÇÄ~}(a‚ÇÄ~ : in-U~‚Çú a‚ÇÄ‚Çö a‚ÇÄ‚Çö a‚ÇÄ~‚Çö)
    {A‚ÇÅ : Set}{a‚ÇÅ‚Çö : in-U‚Çö A‚ÇÅ}(a‚ÇÅ : in-U‚Çú a‚ÇÅ‚Çö){A‚ÇÅ~ : A‚ÇÅ ‚Üí A‚ÇÅ ‚Üí Prop}{a‚ÇÅ~‚Çö : in-U~‚Çö A‚ÇÅ~}(a‚ÇÅ~ : in-U~‚Çú a‚ÇÅ‚Çö a‚ÇÅ‚Çö a‚ÇÅ~‚Çö)
    {A‚ÇÄ‚ÇÅ : A‚ÇÄ ‚Üí A‚ÇÅ ‚Üí Prop}{a‚ÇÄ‚ÇÅ‚Çö : in-U~‚Çö A‚ÇÄ‚ÇÅ}(a‚ÇÄ‚ÇÅ : in-U~‚Çú a‚ÇÄ‚Çö a‚ÇÅ‚Çö a‚ÇÄ‚ÇÅ‚Çö)
    {B‚ÇÄ : A‚ÇÄ ‚Üí Set}{b‚ÇÄ‚Çö : (x : A‚ÇÄ) ‚Üí in-U‚Çö (B‚ÇÄ x)}(b‚ÇÄ : (x : A‚ÇÄ) ‚Üí in-U‚Çú (b‚ÇÄ‚Çö x))
    {B‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÄ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ~ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÄ x‚ÇÄ ‚Üí B‚ÇÄ x‚ÇÅ ‚Üí Prop}
    {b‚ÇÄ~‚Çö : {x‚ÇÄ x‚ÇÅ : A‚ÇÄ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~‚Çö (B‚ÇÄ~ x‚ÇÄ‚ÇÅ)}
    (b‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÄ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~‚Çú (b‚ÇÄ‚Çö x‚ÇÄ) (b‚ÇÄ‚Çö x‚ÇÅ) (b‚ÇÄ~‚Çö x‚ÇÄ‚ÇÅ))
    {B‚ÇÅ : A‚ÇÅ ‚Üí Set}{b‚ÇÅ‚Çö : (x : A‚ÇÅ) ‚Üí in-U‚Çö (B‚ÇÅ x)}(b‚ÇÅ : (x : A‚ÇÅ) ‚Üí in-U‚Çú (b‚ÇÅ‚Çö x))
    {B‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÅ~ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÅ x‚ÇÄ ‚Üí B‚ÇÅ x‚ÇÅ ‚Üí Prop}
    {b‚ÇÅ~‚Çö : {x‚ÇÄ x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÅ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~‚Çö (B‚ÇÅ~ x‚ÇÄ‚ÇÅ)}
    (b‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÅ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~‚Çú (b‚ÇÅ‚Çö x‚ÇÄ) (b‚ÇÅ‚Çö x‚ÇÅ) (b‚ÇÅ~‚Çö x‚ÇÄ‚ÇÅ))
    {B‚ÇÄ‚ÇÅ : {x‚ÇÄ : A‚ÇÄ}{x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÄ x‚ÇÄ ‚Üí B‚ÇÅ x‚ÇÅ ‚Üí Prop}
    {b‚ÇÄ‚ÇÅ‚Çö : {x‚ÇÄ : A‚ÇÄ}{x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~‚Çö (B‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ)}
    (b‚ÇÄ‚ÇÅ : {x‚ÇÄ : A‚ÇÄ}{x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~‚Çú (b‚ÇÄ‚Çö x‚ÇÄ) (b‚ÇÅ‚Çö x‚ÇÅ) (b‚ÇÄ‚ÇÅ‚Çö x‚ÇÄ‚ÇÅ)) ‚Üí
    in-U~‚Çú (œÄ‚Çö a‚ÇÄ‚Çö a‚ÇÄ~‚Çö b‚ÇÄ‚Çö b‚ÇÄ~‚Çö) (œÄ‚Çö a‚ÇÅ‚Çö a‚ÇÅ~‚Çö b‚ÇÅ‚Çö b‚ÇÅ~‚Çö)
      (œÄ~‚Çö a‚ÇÄ‚Çö a‚ÇÄ~‚Çö a‚ÇÅ‚Çö a‚ÇÅ~‚Çö a‚ÇÄ‚ÇÅ‚Çö b‚ÇÄ‚Çö b‚ÇÄ~‚Çö b‚ÇÅ‚Çö b‚ÇÅ~‚Çö b‚ÇÄ‚ÇÅ‚Çö)

in-U : Set ‚Üí Set‚ÇÅ
in-U A = Œ£sp (in-U‚Çö A) in-U‚Çú

in-U~ : {A‚ÇÄ A‚ÇÅ : Set}(a‚ÇÄ : in-U A‚ÇÄ)(a‚ÇÅ : in-U A‚ÇÅ)(A‚ÇÄ‚ÇÅ : A‚ÇÄ ‚Üí A‚ÇÅ ‚Üí Prop) ‚Üí Set‚ÇÅ
in-U~ {A‚ÇÄ}{A‚ÇÅ}(a‚ÇÄ‚Çö ,sp a‚ÇÄ)(a‚ÇÅ‚Çö ,sp a‚ÇÅ) A‚ÇÄ‚ÇÅ = Œ£sp (in-U~‚Çö A‚ÇÄ‚ÇÅ) (in-U~‚Çú a‚ÇÄ‚Çö a‚ÇÅ‚Çö)

bool : in-U ùüö
bool = bool‚Çö ,sp bool‚Çú

œÄ : {A : Set}(a : in-U A){A~ : A ‚Üí A ‚Üí Prop}(a~ : in-U~ a a A~)
    {B : A ‚Üí Set}(b : (x : A) ‚Üí in-U (B x))
    {B~ : {x‚ÇÄ x‚ÇÅ : A}(x‚ÇÄ‚ÇÅ : A~ x‚ÇÄ x‚ÇÅ) ‚Üí B x‚ÇÄ ‚Üí B x‚ÇÅ ‚Üí Prop}
    (b~ : {x‚ÇÄ x‚ÇÅ : A}(x‚ÇÄ‚ÇÅ : A~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~ (b x‚ÇÄ) (b x‚ÇÅ) (B~ x‚ÇÄ‚ÇÅ)) ‚Üí
    in-U (Œ£sp ((x : A) ‚Üí B x) (Œª f ‚Üí (x‚ÇÄ x‚ÇÅ : A)(x‚ÇÄ‚ÇÅ : ‚Üëps (A~ x‚ÇÄ x‚ÇÅ)) ‚Üí B~ (un‚Üëps x‚ÇÄ‚ÇÅ) (f x‚ÇÄ) (f x‚ÇÅ)))
    
œÄ {A}(a‚Çö ,sp a){A~}(a~‚Çö ,sp a~){B} b {B~} b~ =
  œÄ‚Çö a‚Çö a~‚Çö (Œª x ‚Üí proj‚ÇÅsp (b x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÅsp (b~ x‚ÇÄ‚ÇÅ)) ,sp
  œÄ‚Çú a a~ (Œª x ‚Üí proj‚ÇÇsp (b x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÇsp (b~ x‚ÇÄ‚ÇÅ))

bool~ : in-U~ bool bool Œª x‚ÇÄ x‚ÇÅ ‚Üí x‚ÇÄ ‚âüùüö x‚ÇÅ
bool~ = bool~‚Çö ,sp bool~‚Çú

œÄ~ :
  {A‚ÇÄ : Set}{a‚ÇÄ : in-U A‚ÇÄ}{A‚ÇÄ~ : A‚ÇÄ ‚Üí A‚ÇÄ ‚Üí Prop}{a‚ÇÄ~ : in-U~ a‚ÇÄ a‚ÇÄ A‚ÇÄ~}
  {A‚ÇÅ : Set}{a‚ÇÅ : in-U A‚ÇÅ}{A‚ÇÅ~ : A‚ÇÅ ‚Üí A‚ÇÅ ‚Üí Prop}{a‚ÇÅ~ : in-U~ a‚ÇÅ a‚ÇÅ A‚ÇÅ~}
  {A‚ÇÄ‚ÇÅ : A‚ÇÄ ‚Üí A‚ÇÅ ‚Üí Prop}(a‚ÇÄ‚ÇÅ : in-U~ a‚ÇÄ a‚ÇÅ A‚ÇÄ‚ÇÅ)
  {B‚ÇÄ : A‚ÇÄ ‚Üí Set}{b‚ÇÄ : (x‚ÇÄ : A‚ÇÄ) ‚Üí in-U (B‚ÇÄ x‚ÇÄ)}
    {B‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÄ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ~ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÄ x‚ÇÄ ‚Üí B‚ÇÄ x‚ÇÅ ‚Üí Prop}
    {b‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÄ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~ (b‚ÇÄ x‚ÇÄ) (b‚ÇÄ x‚ÇÅ) (B‚ÇÄ~ x‚ÇÄ‚ÇÅ)}
  {B‚ÇÅ : A‚ÇÅ ‚Üí Set}{b‚ÇÅ : (x‚ÇÅ : A‚ÇÅ) ‚Üí in-U (B‚ÇÅ x‚ÇÅ)}
    {B‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÅ~ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÅ x‚ÇÄ ‚Üí B‚ÇÅ x‚ÇÅ ‚Üí Prop}
    {b‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÅ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~ (b‚ÇÅ x‚ÇÄ) (b‚ÇÅ x‚ÇÅ) (B‚ÇÅ~ x‚ÇÄ‚ÇÅ)}
  {B‚ÇÄ‚ÇÅ : {x‚ÇÄ : A‚ÇÄ}{x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÄ x‚ÇÄ ‚Üí B‚ÇÅ x‚ÇÅ ‚Üí Prop}
  (b‚ÇÄ‚ÇÅ : {x‚ÇÄ : A‚ÇÄ}{x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~ (b‚ÇÄ x‚ÇÄ) (b‚ÇÅ x‚ÇÅ) (B‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ)) ‚Üí 
  in-U~ (œÄ a‚ÇÄ a‚ÇÄ~ b‚ÇÄ {B‚ÇÄ~} b‚ÇÄ~)
        (œÄ a‚ÇÅ a‚ÇÅ~ b‚ÇÅ {B‚ÇÅ~} b‚ÇÅ~)
        (Œª {(f‚ÇÄ ,sp f‚ÇÄ~) (f‚ÇÅ ,sp f‚ÇÅ~) ‚Üí (x‚ÇÄ : A‚ÇÄ)(x‚ÇÅ : A‚ÇÅ)(x‚ÇÄ‚ÇÅ : ‚Üëps (A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ)) ‚Üí B‚ÇÄ‚ÇÅ (un‚Üëps x‚ÇÄ‚ÇÅ) (f‚ÇÄ x‚ÇÄ) (f‚ÇÅ x‚ÇÅ)})
œÄ~ {A‚ÇÄ}{a‚ÇÄ‚Çö ,sp a‚ÇÄ}{A‚ÇÄ~}{a‚ÇÄ~‚Çö ,sp a‚ÇÄ~}{A‚ÇÅ}{a‚ÇÅ‚Çö ,sp a‚ÇÅ}{A‚ÇÅ~}{a‚ÇÅ~‚Çö ,sp a‚ÇÅ~}{A‚ÇÄ‚ÇÅ}(a‚ÇÄ‚ÇÅ‚Çö ,sp a‚ÇÄ‚ÇÅ){B‚ÇÄ}{b‚ÇÄ}{B‚ÇÄ~}{b‚ÇÄ~}{B‚ÇÅ}{b‚ÇÅ}{B‚ÇÅ~}{b‚ÇÅ~}{B‚ÇÄ‚ÇÅ} b‚ÇÄ‚ÇÅ =
  œÄ~‚Çö a‚ÇÄ‚Çö a‚ÇÄ~‚Çö a‚ÇÅ‚Çö a‚ÇÅ~‚Çö a‚ÇÄ‚ÇÅ‚Çö (Œª x ‚Üí proj‚ÇÅsp (b‚ÇÄ x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÅsp (b‚ÇÄ~ x‚ÇÄ‚ÇÅ)) (Œª x ‚Üí proj‚ÇÅsp (b‚ÇÅ x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÅsp (b‚ÇÅ~ x‚ÇÄ‚ÇÅ)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÅsp (b‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ)) ,sp
  œÄ~‚Çú a‚ÇÄ a‚ÇÄ~ a‚ÇÅ a‚ÇÅ~ a‚ÇÄ‚ÇÅ (Œª x ‚Üí proj‚ÇÇsp (b‚ÇÄ x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÇsp (b‚ÇÄ~ x‚ÇÄ‚ÇÅ)) (Œª x ‚Üí proj‚ÇÇsp (b‚ÇÅ x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÇsp (b‚ÇÅ~ x‚ÇÄ‚ÇÅ)) (Œª x‚ÇÄ‚ÇÅ ‚Üí proj‚ÇÇsp (b‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ))

-- simple eliminator targetting propositions

module simpleProp
  {i}
  {j}
  (in-U·¥∞ : ‚àÄ{A : Set} ‚Üí in-U A ‚Üí Prop i)
  (in-U~·¥∞ : {A‚ÇÄ A‚ÇÅ : Set}{a‚ÇÄ : in-U A‚ÇÄ}{a‚ÇÅ : in-U A‚ÇÅ}{A‚ÇÄ‚ÇÅ : A‚ÇÄ ‚Üí A‚ÇÅ ‚Üí Prop} ‚Üí in-U~ a‚ÇÄ a‚ÇÅ A‚ÇÄ‚ÇÅ ‚Üí Prop j)
  (bool·¥∞ : in-U·¥∞ bool)
  (œÄ·¥∞ : {A : Set}{a : in-U A}(a·¥∞ : in-U·¥∞ a){A~ : A ‚Üí A ‚Üí Prop}{a~ : in-U~ a a A~}(a~·¥∞ : in-U~·¥∞ {a‚ÇÄ = a}{a‚ÇÅ = a} a~)
    {B : A ‚Üí Set}{b : (x : A) ‚Üí in-U (B x)}(b·¥∞ : (x : A) ‚Üí in-U·¥∞ (b x))
    {B~ : {x‚ÇÄ x‚ÇÅ : A}(x‚ÇÄ‚ÇÅ : A~ x‚ÇÄ x‚ÇÅ) ‚Üí B x‚ÇÄ ‚Üí B x‚ÇÅ ‚Üí Prop}
    {b~ : {x‚ÇÄ x‚ÇÅ : A}(x‚ÇÄ‚ÇÅ : A~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~ (b x‚ÇÄ) (b x‚ÇÅ) (B~ x‚ÇÄ‚ÇÅ)}
    (b~·¥∞ : {x‚ÇÄ x‚ÇÅ : A}(x‚ÇÄ‚ÇÅ : A~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~·¥∞ {a‚ÇÄ = b x‚ÇÄ}{a‚ÇÅ = b x‚ÇÅ}(b~ x‚ÇÄ‚ÇÅ)) ‚Üí 
    in-U·¥∞ (œÄ a a~ b b~))
  (bool~·¥∞ : in-U~·¥∞ {a‚ÇÄ = bool}{a‚ÇÅ = bool} bool~)
  (œÄ~·¥∞ : {A‚ÇÄ : Set}{a‚ÇÄ : in-U A‚ÇÄ}(a‚ÇÄ·¥∞ : in-U·¥∞ a‚ÇÄ){A‚ÇÄ~ : A‚ÇÄ ‚Üí A‚ÇÄ ‚Üí Prop}{a‚ÇÄ~ : in-U~ a‚ÇÄ a‚ÇÄ A‚ÇÄ~}(a‚ÇÄ~·¥∞ : in-U~·¥∞ {a‚ÇÄ = a‚ÇÄ}{a‚ÇÅ = a‚ÇÄ} a‚ÇÄ~)
    {A‚ÇÅ : Set}{a‚ÇÅ : in-U A‚ÇÅ}(a‚ÇÅ·¥∞ : in-U·¥∞ a‚ÇÅ){A‚ÇÅ~ : A‚ÇÅ ‚Üí A‚ÇÅ ‚Üí Prop}{a‚ÇÅ~ : in-U~ a‚ÇÅ a‚ÇÅ A‚ÇÅ~}(a‚ÇÅ~·¥∞ : in-U~·¥∞ {a‚ÇÄ = a‚ÇÅ}{a‚ÇÅ = a‚ÇÅ} a‚ÇÅ~)
    {A‚ÇÄ‚ÇÅ : A‚ÇÄ ‚Üí A‚ÇÅ ‚Üí Prop}{a‚ÇÄ‚ÇÅ : in-U~ a‚ÇÄ a‚ÇÅ A‚ÇÄ‚ÇÅ}(a‚ÇÄ‚ÇÅ·¥∞ : in-U~·¥∞ {a‚ÇÄ = a‚ÇÄ}{a‚ÇÅ = a‚ÇÅ} a‚ÇÄ‚ÇÅ)
    {B‚ÇÄ : A‚ÇÄ ‚Üí Set}{b‚ÇÄ : (x‚ÇÄ : A‚ÇÄ) ‚Üí in-U (B‚ÇÄ x‚ÇÄ)}(b‚ÇÄ·¥∞ : (x‚ÇÄ : A‚ÇÄ) ‚Üí in-U·¥∞ (b‚ÇÄ x‚ÇÄ))
      {B‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÄ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ~ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÄ x‚ÇÄ ‚Üí B‚ÇÄ x‚ÇÅ ‚Üí Prop}
      {b‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÄ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~ (b‚ÇÄ x‚ÇÄ) (b‚ÇÄ x‚ÇÅ) (B‚ÇÄ~ x‚ÇÄ‚ÇÅ)}
      (b‚ÇÄ~·¥∞ : {x‚ÇÄ x‚ÇÅ : A‚ÇÄ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~·¥∞ {a‚ÇÄ = b‚ÇÄ x‚ÇÄ}{a‚ÇÅ = b‚ÇÄ x‚ÇÅ} (b‚ÇÄ~ x‚ÇÄ‚ÇÅ))
    {B‚ÇÅ : A‚ÇÅ ‚Üí Set}{b‚ÇÅ : (x‚ÇÅ : A‚ÇÅ) ‚Üí in-U (B‚ÇÅ x‚ÇÅ)}(b‚ÇÅ·¥∞ : (x‚ÇÅ : A‚ÇÅ) ‚Üí in-U·¥∞ (b‚ÇÅ x‚ÇÅ))
      {B‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÅ~ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÅ x‚ÇÄ ‚Üí B‚ÇÅ x‚ÇÅ ‚Üí Prop}
      {b‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÅ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~ (b‚ÇÅ x‚ÇÄ) (b‚ÇÅ x‚ÇÅ) (B‚ÇÅ~ x‚ÇÄ‚ÇÅ)}
      (b‚ÇÅ~·¥∞ : {x‚ÇÄ x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÅ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~·¥∞ {a‚ÇÄ = b‚ÇÅ x‚ÇÄ}{a‚ÇÅ = b‚ÇÅ x‚ÇÅ} (b‚ÇÅ~ x‚ÇÄ‚ÇÅ))
    {B‚ÇÄ‚ÇÅ : {x‚ÇÄ : A‚ÇÄ}{x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÄ x‚ÇÄ ‚Üí B‚ÇÅ x‚ÇÅ ‚Üí Prop}
    {b‚ÇÄ‚ÇÅ : {x‚ÇÄ : A‚ÇÄ}{x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~ (b‚ÇÄ x‚ÇÄ) (b‚ÇÅ x‚ÇÅ) (B‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ)}
    (b‚ÇÄ‚ÇÅ·¥∞ : {x‚ÇÄ : A‚ÇÄ}{x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~·¥∞ {a‚ÇÄ = b‚ÇÄ x‚ÇÄ}{a‚ÇÅ = b‚ÇÅ x‚ÇÅ} (b‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ)) ‚Üí 
    in-U~·¥∞ {a‚ÇÄ = œÄ a‚ÇÄ a‚ÇÄ~ b‚ÇÄ b‚ÇÄ~}{a‚ÇÅ = œÄ a‚ÇÅ a‚ÇÅ~ b‚ÇÅ b‚ÇÅ~} (œÄ~ {a‚ÇÄ = a‚ÇÄ}{a‚ÇÄ~ = a‚ÇÄ~}{a‚ÇÅ = a‚ÇÅ}{a‚ÇÅ~ = a‚ÇÅ~} a‚ÇÄ‚ÇÅ {b‚ÇÄ = b‚ÇÄ}{b‚ÇÄ~ = b‚ÇÄ~}{b‚ÇÅ = b‚ÇÅ}{b‚ÇÅ~ = b‚ÇÅ~} b‚ÇÄ‚ÇÅ))
  where

  ind-in-U : ‚àÄ{A : Set}(a : in-U A) ‚Üí in-U·¥∞ a
  ind-in-U~ : ‚àÄ{A‚ÇÄ A‚ÇÅ : Set}{a‚ÇÄ : in-U A‚ÇÄ}{a‚ÇÅ : in-U A‚ÇÅ}{A‚ÇÄ‚ÇÅ : A‚ÇÄ ‚Üí A‚ÇÅ ‚Üí Prop}(a‚ÇÄ‚ÇÅ : in-U~ a‚ÇÄ a‚ÇÅ A‚ÇÄ‚ÇÅ) ‚Üí in-U~·¥∞ {a‚ÇÄ = a‚ÇÄ}{a‚ÇÅ = a‚ÇÅ} a‚ÇÄ‚ÇÅ
  
  ind-in-U (bool‚Çö ,sp _) = bool·¥∞
  ind-in-U (œÄ‚Çö {A} a‚Çö {A~} a~‚Çö {B} b‚Çö {B~} b~‚Çö ,sp œÄ‚Çú a a~ b b~) =
    œÄ·¥∞ (ind-in-U (a‚Çö ,sp a)) (ind-in-U~ (a~‚Çö ,sp a~)) (Œª x ‚Üí ind-in-U (b‚Çö x ,sp b x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí ind-in-U~ (b~‚Çö x‚ÇÄ‚ÇÅ ,sp b~ x‚ÇÄ‚ÇÅ))

  ind-in-U~ (bool~‚Çö ,sp bool~‚Çú) = bool~·¥∞
  ind-in-U~ (œÄ~‚Çö a‚ÇÄ‚Çö a‚ÇÄ~‚Çö a‚ÇÅ‚Çö a‚ÇÅ~‚Çö a‚ÇÄ‚ÇÅ‚Çö b‚ÇÄ‚Çö b‚ÇÄ~‚Çö b‚ÇÅ‚Çö b‚ÇÅ~‚Çö b‚ÇÄ‚ÇÅ‚Çö ,sp œÄ~‚Çú a‚ÇÄ a‚ÇÄ~ a‚ÇÅ a‚ÇÅ~ a‚ÇÄ‚ÇÅ b‚ÇÄ b‚ÇÄ~ b‚ÇÅ b‚ÇÅ~ b‚ÇÄ‚ÇÅ) =
    œÄ~·¥∞ (ind-in-U (a‚ÇÄ‚Çö ,sp a‚ÇÄ)) (ind-in-U~ (a‚ÇÄ~‚Çö ,sp a‚ÇÄ~)) (ind-in-U (a‚ÇÅ‚Çö ,sp a‚ÇÅ)) (ind-in-U~ (a‚ÇÅ~‚Çö ,sp a‚ÇÅ~)) (ind-in-U~ (a‚ÇÄ‚ÇÅ‚Çö ,sp a‚ÇÄ‚ÇÅ))
    (Œª x ‚Üí ind-in-U (b‚ÇÄ‚Çö x ,sp b‚ÇÄ x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí ind-in-U~ (b‚ÇÄ~‚Çö x‚ÇÄ‚ÇÅ ,sp b‚ÇÄ~ x‚ÇÄ‚ÇÅ)) (Œª x ‚Üí ind-in-U (b‚ÇÅ‚Çö x ,sp b‚ÇÅ x)) (Œª x‚ÇÄ‚ÇÅ ‚Üí ind-in-U~ (b‚ÇÅ~‚Çö x‚ÇÄ‚ÇÅ ,sp b‚ÇÅ~ x‚ÇÄ‚ÇÅ))
    Œª x‚ÇÄ‚ÇÅ ‚Üí ind-in-U~ (b‚ÇÄ‚ÇÅ‚Çö x‚ÇÄ‚ÇÅ ,sp b‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ)

-- simple eliminator targetting sets

open import Agda.Builtin.Equality

withProp : ‚àÄ{i j} {P : Prop i} {Q : Prop j} -> P -> (P -> Q) -> Q
withProp p f = f p

postulate
  _‚â°p_ : ‚àÄ{i} {A : Set i} -> A -> A -> Prop i
  reflp : ‚àÄ{i} {A : Set i} {a : A} -> a ‚â°p a
  transp-‚â°p : ‚àÄ{i j}{A : Set i} {x y : A} (P : A ‚Üí Set j) ‚Üí x ‚â°p y ‚Üí P x ‚Üí P y

to-‚â° : ‚àÄ{i} {A : Set i} {x y : A} -> x ‚â°p y -> x ‚â° y
to-‚â° e = transp-‚â°p (Œª y ‚Üí _ ‚â° y) e refl

module simple
  {i}
  {j}
  (in-U·¥∞ : ‚àÄ{A : Set} ‚Üí in-U A ‚Üí Set i)
  (in-U~·¥∞ : {A‚ÇÄ A‚ÇÅ : Set}{a‚ÇÄ : in-U A‚ÇÄ}{a‚ÇÅ : in-U A‚ÇÅ}{A‚ÇÄ‚ÇÅ : A‚ÇÄ ‚Üí A‚ÇÅ ‚Üí Prop} ‚Üí in-U~ a‚ÇÄ a‚ÇÅ A‚ÇÄ‚ÇÅ ‚Üí Set j)
  (bool·¥∞ : in-U·¥∞ bool)
  (œÄ·¥∞ : {A : Set}{a : in-U A}(a·¥∞ : in-U·¥∞ a){A~ : A ‚Üí A ‚Üí Prop}{a~ : in-U~ a a A~}(a~·¥∞ : in-U~·¥∞ {a‚ÇÄ = a}{a‚ÇÅ = a} a~)
    {B : A ‚Üí Set}{b : (x : A) ‚Üí in-U (B x)}(b·¥∞ : (x : A) ‚Üí in-U·¥∞ (b x))
    {B~ : {x‚ÇÄ x‚ÇÅ : A}(x‚ÇÄ‚ÇÅ : A~ x‚ÇÄ x‚ÇÅ) ‚Üí B x‚ÇÄ ‚Üí B x‚ÇÅ ‚Üí Prop}
    {b~ : {x‚ÇÄ x‚ÇÅ : A}(x‚ÇÄ‚ÇÅ : A~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~ (b x‚ÇÄ) (b x‚ÇÅ) (B~ x‚ÇÄ‚ÇÅ)}
    (b~·¥∞ : {x‚ÇÄ x‚ÇÅ : A}(x‚ÇÄ‚ÇÅ : A~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~·¥∞ {a‚ÇÄ = b x‚ÇÄ}{a‚ÇÅ = b x‚ÇÅ}(b~ x‚ÇÄ‚ÇÅ)) ‚Üí 
    in-U·¥∞ (œÄ a a~ b b~))
  (bool~·¥∞ : in-U~·¥∞ {a‚ÇÄ = bool}{a‚ÇÅ = bool} bool~)
  (œÄ~·¥∞ : {A‚ÇÄ : Set}{a‚ÇÄ : in-U A‚ÇÄ}(a‚ÇÄ·¥∞ : in-U·¥∞ a‚ÇÄ){A‚ÇÄ~ : A‚ÇÄ ‚Üí A‚ÇÄ ‚Üí Prop}{a‚ÇÄ~ : in-U~ a‚ÇÄ a‚ÇÄ A‚ÇÄ~}(a‚ÇÄ~·¥∞ : in-U~·¥∞ {a‚ÇÄ = a‚ÇÄ}{a‚ÇÅ = a‚ÇÄ} a‚ÇÄ~)
    {A‚ÇÅ : Set}{a‚ÇÅ : in-U A‚ÇÅ}(a‚ÇÅ·¥∞ : in-U·¥∞ a‚ÇÅ){A‚ÇÅ~ : A‚ÇÅ ‚Üí A‚ÇÅ ‚Üí Prop}{a‚ÇÅ~ : in-U~ a‚ÇÅ a‚ÇÅ A‚ÇÅ~}(a‚ÇÅ~·¥∞ : in-U~·¥∞ {a‚ÇÄ = a‚ÇÅ}{a‚ÇÅ = a‚ÇÅ} a‚ÇÅ~)
    {A‚ÇÄ‚ÇÅ : A‚ÇÄ ‚Üí A‚ÇÅ ‚Üí Prop}{a‚ÇÄ‚ÇÅ : in-U~ a‚ÇÄ a‚ÇÅ A‚ÇÄ‚ÇÅ}(a‚ÇÄ‚ÇÅ·¥∞ : in-U~·¥∞ {a‚ÇÄ = a‚ÇÄ}{a‚ÇÅ = a‚ÇÅ} a‚ÇÄ‚ÇÅ)
    {B‚ÇÄ : A‚ÇÄ ‚Üí Set}{b‚ÇÄ : (x‚ÇÄ : A‚ÇÄ) ‚Üí in-U (B‚ÇÄ x‚ÇÄ)}(b‚ÇÄ·¥∞ : (x‚ÇÄ : A‚ÇÄ) ‚Üí in-U·¥∞ (b‚ÇÄ x‚ÇÄ))
      {B‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÄ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ~ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÄ x‚ÇÄ ‚Üí B‚ÇÄ x‚ÇÅ ‚Üí Prop}
      {b‚ÇÄ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÄ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~ (b‚ÇÄ x‚ÇÄ) (b‚ÇÄ x‚ÇÅ) (B‚ÇÄ~ x‚ÇÄ‚ÇÅ)}
      (b‚ÇÄ~·¥∞ : {x‚ÇÄ x‚ÇÅ : A‚ÇÄ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~·¥∞ {a‚ÇÄ = b‚ÇÄ x‚ÇÄ}{a‚ÇÅ = b‚ÇÄ x‚ÇÅ} (b‚ÇÄ~ x‚ÇÄ‚ÇÅ))
    {B‚ÇÅ : A‚ÇÅ ‚Üí Set}{b‚ÇÅ : (x‚ÇÅ : A‚ÇÅ) ‚Üí in-U (B‚ÇÅ x‚ÇÅ)}(b‚ÇÅ·¥∞ : (x‚ÇÅ : A‚ÇÅ) ‚Üí in-U·¥∞ (b‚ÇÅ x‚ÇÅ))
      {B‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÅ~ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÅ x‚ÇÄ ‚Üí B‚ÇÅ x‚ÇÅ ‚Üí Prop}
      {b‚ÇÅ~ : {x‚ÇÄ x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÅ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~ (b‚ÇÅ x‚ÇÄ) (b‚ÇÅ x‚ÇÅ) (B‚ÇÅ~ x‚ÇÄ‚ÇÅ)}
      (b‚ÇÅ~·¥∞ : {x‚ÇÄ x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÅ~ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~·¥∞ {a‚ÇÄ = b‚ÇÅ x‚ÇÄ}{a‚ÇÅ = b‚ÇÅ x‚ÇÅ} (b‚ÇÅ~ x‚ÇÄ‚ÇÅ))
    {B‚ÇÄ‚ÇÅ : {x‚ÇÄ : A‚ÇÄ}{x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ) ‚Üí B‚ÇÄ x‚ÇÄ ‚Üí B‚ÇÅ x‚ÇÅ ‚Üí Prop}
    {b‚ÇÄ‚ÇÅ : {x‚ÇÄ : A‚ÇÄ}{x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~ (b‚ÇÄ x‚ÇÄ) (b‚ÇÅ x‚ÇÅ) (B‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ)}
    (b‚ÇÄ‚ÇÅ·¥∞ : {x‚ÇÄ : A‚ÇÄ}{x‚ÇÅ : A‚ÇÅ}(x‚ÇÄ‚ÇÅ : A‚ÇÄ‚ÇÅ x‚ÇÄ x‚ÇÅ) ‚Üí in-U~·¥∞ {a‚ÇÄ = b‚ÇÄ x‚ÇÄ}{a‚ÇÅ = b‚ÇÅ x‚ÇÅ} (b‚ÇÄ‚ÇÅ x‚ÇÄ‚ÇÅ)) ‚Üí 
    in-U~·¥∞ {a‚ÇÄ = œÄ a‚ÇÄ a‚ÇÄ~ b‚ÇÄ b‚ÇÄ~}{a‚ÇÅ = œÄ a‚ÇÅ a‚ÇÅ~ b‚ÇÅ b‚ÇÅ~} (œÄ~ {a‚ÇÄ = a‚ÇÄ}{a‚ÇÄ~ = a‚ÇÄ~}{a‚ÇÅ = a‚ÇÅ}{a‚ÇÅ~ = a‚ÇÅ~} a‚ÇÄ‚ÇÅ {b‚ÇÄ = b‚ÇÄ}{b‚ÇÄ~ = b‚ÇÄ~}{b‚ÇÅ = b‚ÇÅ}{b‚ÇÅ~ = b‚ÇÅ~} b‚ÇÄ‚ÇÅ))
  where

  ind-in-U' : {A : Set} (a‚Çö : in-U‚Çö A) (a‚Çú : in-U‚Çú a‚Çö) -> in-U·¥∞ (a‚Çö ,sp a‚Çú)
  ind-in-U~' : {A‚ÇÄ A‚ÇÅ : Set} {A‚ÇÄ‚ÇÅ : A‚ÇÄ ‚Üí A‚ÇÅ ‚Üí Prop} {a‚ÇÄ : in-U A‚ÇÄ}{a‚ÇÅ : in-U A‚ÇÅ}
               (a‚ÇÄ‚ÇÅ‚Çö : in-U~‚Çö A‚ÇÄ‚ÇÅ)
               (a‚ÇÄ‚ÇÅ‚Çú : in-U~‚Çú (proj‚ÇÅsp a‚ÇÄ) (proj‚ÇÅsp a‚ÇÅ) a‚ÇÄ‚ÇÅ‚Çö)
             ‚Üí in-U~·¥∞ {a‚ÇÄ = a‚ÇÄ}{a‚ÇÅ = a‚ÇÅ} (a‚ÇÄ‚ÇÅ‚Çö ,sp a‚ÇÄ‚ÇÅ‚Çú)

  ind-in-U' bool‚Çö y = bool·¥∞
  ind-in-U' (œÄ‚Çö {A} a‚Çö {A~} a~‚Çö {B} b‚Çö {B~} b~‚Çö) w =
    œÄ·¥∞ (ind-in-U' a‚Çö a)
       (ind-in-U~' a~‚Çö a~)
       (Œª x ‚Üí ind-in-U' (b‚Çö x) (b x))
       (Œª x‚ÇÄ‚ÇÅ ‚Üí ind-in-U~' (b~‚Çö x‚ÇÄ‚ÇÅ) (b~ x‚ÇÄ‚ÇÅ))
    where
      a : in-U‚Çú a‚Çö
      a = withProp w (Œª { (œÄ‚Çú x _ _ _) ‚Üí x })
      a~ : in-U~‚Çú a‚Çö a‚Çö a~‚Çö
      a~ = withProp w (Œª { (œÄ‚Çú _ x _ _) ‚Üí x })
      b : (x : _) -> in-U‚Çú (b‚Çö x)
      b x = withProp w (Œª { (œÄ‚Çú _ _ y _) ‚Üí y x })
      b~ : {x‚ÇÄ x‚ÇÅ : _} (x‚ÇÄ‚ÇÅ : _) -> in-U~‚Çú (b‚Çö x‚ÇÄ) (b‚Çö x‚ÇÅ) (b~‚Çö x‚ÇÄ‚ÇÅ)
      b~ = withProp w Œª { (œÄ‚Çú _ _ _ b~) ‚Üí b~ }

  ind-in-U~' {a‚ÇÄ = a‚ÇÄ} {a‚ÇÅ} bool~‚Çö y =
    goal (to-‚â° (withProp y (Œª { bool~‚Çú ‚Üí reflp }))) (to-‚â° (withProp y (Œª { bool~‚Çú ‚Üí reflp })))
    where
      goal : a‚ÇÄ ‚â° bool -> a‚ÇÅ ‚â° bool -> _
      goal refl refl = bool~·¥∞
  ind-in-U~' {a‚ÇÄ = x‚ÇÄ} {x‚ÇÅ} (œÄ~‚Çö a‚ÇÄ‚Çö a‚ÇÄ~‚Çö a‚ÇÅ‚Çö a‚ÇÅ~‚Çö a‚ÇÄ‚ÇÅ‚Çö b‚ÇÄ‚Çö b‚ÇÄ~‚Çö b‚ÇÅ‚Çö b‚ÇÅ~‚Çö b‚ÇÄ‚ÇÅ‚Çö) p =
    goal (to-‚â° (withProp p Œª { (œÄ~‚Çú _ _ _ _ _ _ _ _ _ _) ‚Üí reflp }))
         (to-‚â° (withProp p Œª { (œÄ~‚Çú _ _ _ _ _ _ _ _ _ _) ‚Üí reflp }))
    where
      a‚ÇÄ‚Çú = withProp p Œª { (œÄ~‚Çú x _ _ _ _ _ _ _ _ _) ‚Üí x }
      a‚ÇÄ~‚Çú = withProp p Œª { (œÄ~‚Çú _ x _ _ _ _ _ _ _ _) ‚Üí x }
      b‚ÇÄ‚Çú : (x : _) -> in-U‚Çú (b‚ÇÄ‚Çö x)
      b‚ÇÄ‚Çú = withProp p Œª { (œÄ~‚Çú _ _ _ _ _ x _ _ _ _) ‚Üí x }
      b‚ÇÄ~‚Çú : {x‚ÇÄ x‚ÇÅ : _} (x‚ÇÄ‚ÇÅ : _) -> in-U~‚Çú (b‚ÇÄ‚Çö x‚ÇÄ) (b‚ÇÄ‚Çö x‚ÇÅ) (b‚ÇÄ~‚Çö x‚ÇÄ‚ÇÅ)
      b‚ÇÄ~‚Çú = withProp p Œª { (œÄ~‚Çú _ _ _ _ _ _ x _ _ _) ‚Üí x }
      a‚ÇÅ‚Çú = withProp p Œª { (œÄ~‚Çú _ _ x _ _ _ _ _ _ _) ‚Üí x }
      a‚ÇÅ~‚Çú = withProp p Œª { (œÄ~‚Çú _ _ _ x _ _ _ _ _ _) ‚Üí x }
      b‚ÇÅ‚Çú : (x : _) -> in-U‚Çú (b‚ÇÅ‚Çö x)
      b‚ÇÅ‚Çú = withProp p Œª { (œÄ~‚Çú _ _ _ _ _ _ _ x _ _) ‚Üí x }
      b‚ÇÅ~‚Çú : {x‚ÇÄ x‚ÇÅ : _} (x‚ÇÄ‚ÇÅ : _) -> in-U~‚Çú (b‚ÇÅ‚Çö x‚ÇÄ) (b‚ÇÅ‚Çö x‚ÇÅ) (b‚ÇÅ~‚Çö x‚ÇÄ‚ÇÅ)
      b‚ÇÅ~‚Çú = withProp p Œª { (œÄ~‚Çú _ _ _ _ _ _ _ _ x _) ‚Üí x }
      a‚ÇÄ‚ÇÅ‚Çú : in-U~‚Çú a‚ÇÄ‚Çö a‚ÇÅ‚Çö a‚ÇÄ‚ÇÅ‚Çö
      a‚ÇÄ‚ÇÅ‚Çú = withProp p Œª { (œÄ~‚Çú _ _ _ _ x _ _ _ _ _) ‚Üí x }
      b‚ÇÄ‚ÇÅ‚Çú : {x‚ÇÄ : _} {x‚ÇÅ : _} (x‚ÇÄ‚ÇÅ : _) -> in-U~‚Çú (b‚ÇÄ‚Çö x‚ÇÄ) (b‚ÇÅ‚Çö x‚ÇÅ) (b‚ÇÄ‚ÇÅ‚Çö x‚ÇÄ‚ÇÅ)
      b‚ÇÄ‚ÇÅ‚Çú = withProp p Œª { (œÄ~‚Çú _ _ _ _ _ _ _ _ _ x) ‚Üí x }

      goal : x‚ÇÄ ‚â° œÄ (a‚ÇÄ‚Çö ,sp a‚ÇÄ‚Çú) (a‚ÇÄ~‚Çö ,sp a‚ÇÄ~‚Çú) (Œª x ‚Üí b‚ÇÄ‚Çö x ,sp b‚ÇÄ‚Çú x) (Œª x‚ÇÄ‚ÇÅ ‚Üí b‚ÇÄ~‚Çö x‚ÇÄ‚ÇÅ ,sp b‚ÇÄ~‚Çú x‚ÇÄ‚ÇÅ)
           ‚Üí x‚ÇÅ ‚â° œÄ (a‚ÇÅ‚Çö ,sp a‚ÇÅ‚Çú) (a‚ÇÅ~‚Çö ,sp a‚ÇÅ~‚Çú) (Œª x ‚Üí b‚ÇÅ‚Çö x ,sp b‚ÇÅ‚Çú x) (Œª x‚ÇÄ‚ÇÅ ‚Üí b‚ÇÅ~‚Çö x‚ÇÄ‚ÇÅ ,sp b‚ÇÅ~‚Çú x‚ÇÄ‚ÇÅ)
           ‚Üí _
      goal refl refl =
        œÄ~·¥∞ (ind-in-U' a‚ÇÄ‚Çö a‚ÇÄ‚Çú)
            (ind-in-U~' a‚ÇÄ~‚Çö a‚ÇÄ~‚Çú)
            (ind-in-U' a‚ÇÅ‚Çö a‚ÇÅ‚Çú)
            (ind-in-U~' a‚ÇÅ~‚Çö a‚ÇÅ~‚Çú)
            (ind-in-U~' a‚ÇÄ‚ÇÅ‚Çö a‚ÇÄ‚ÇÅ‚Çú)
            (Œª x ‚Üí ind-in-U' (b‚ÇÄ‚Çö x) (b‚ÇÄ‚Çú x))
            (Œª x‚ÇÄ‚ÇÅ ‚Üí ind-in-U~' (b‚ÇÄ~‚Çö x‚ÇÄ‚ÇÅ) (b‚ÇÄ~‚Çú x‚ÇÄ‚ÇÅ))
            (Œª x ‚Üí ind-in-U' (b‚ÇÅ‚Çö x) (b‚ÇÅ‚Çú x))
            (Œª x‚ÇÄ‚ÇÅ ‚Üí ind-in-U~' (b‚ÇÅ~‚Çö x‚ÇÄ‚ÇÅ) (b‚ÇÅ~‚Çú x‚ÇÄ‚ÇÅ))
            (Œª x‚ÇÄ‚ÇÅ ‚Üí ind-in-U~' (b‚ÇÄ‚ÇÅ‚Çö x‚ÇÄ‚ÇÅ) (b‚ÇÄ‚ÇÅ‚Çú x‚ÇÄ‚ÇÅ))

  ind-in-U : ‚àÄ{A : Set}(a : in-U A) ‚Üí in-U·¥∞ a
  ind-in-U (a ,sp a') = ind-in-U' a a'

  ind-in-U~ : ‚àÄ{A‚ÇÄ A‚ÇÅ : Set}{a‚ÇÄ : in-U A‚ÇÄ}{a‚ÇÅ : in-U A‚ÇÅ}{A‚ÇÄ‚ÇÅ : A‚ÇÄ ‚Üí A‚ÇÅ ‚Üí Prop}
               (a‚ÇÄ‚ÇÅ : in-U~ a‚ÇÄ a‚ÇÅ A‚ÇÄ‚ÇÅ) ‚Üí in-U~·¥∞ {a‚ÇÄ = a‚ÇÄ}{a‚ÇÅ = a‚ÇÅ} a‚ÇÄ‚ÇÅ
  ind-in-U~ (a ,sp a') = ind-in-U~' a a'
