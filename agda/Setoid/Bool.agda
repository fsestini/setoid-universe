{-# OPTIONS --without-K --prop #-}

module Setoid.Bool where

open import Agda.Primitive
open import Setoid.lib
open import Setoid.CwF

Bool    : ‚àÄ{i}{Œì : Con i} ‚Üí Ty Œì lzero
Bool = mkTy
  (Œª _ ‚Üí ùüö)
  (Œª _ t‚ÇÄ t‚ÇÅ ‚Üí if t‚ÇÄ then (if t‚ÇÅ then ‚ä§p else ‚ä•p) else (if t‚ÇÅ then ‚ä•p else ‚ä§p))
  (Œª t ‚Üí pif_then_else_ {C = Œª t ‚Üí if t then (if t then ‚ä§p else ‚ä•p) else (if t then ‚ä•p else ‚ä§p)} t ttp ttp)
  (Œª {_}{_}{_}{t‚ÇÄ}{t‚ÇÅ} t‚ÇÄ‚ÇÅ ‚Üí
    pif_then_else_
      {C = Œª t‚ÇÄ ‚Üí if t‚ÇÄ then if t‚ÇÅ then ‚ä§p else ‚ä•p else (if t‚ÇÅ then ‚ä•p else ‚ä§p) ‚Üí if t‚ÇÅ then if t‚ÇÄ then ‚ä§p else ‚ä•p else (if t‚ÇÄ then ‚ä•p else ‚ä§p)}
      t‚ÇÄ
      (Œª x ‚Üí x)
      (Œª x ‚Üí x)
      t‚ÇÄ‚ÇÅ)
  (Œª {_}{_}{_}{_}{_}{t‚ÇÄ}{t‚ÇÅ}{t‚ÇÇ} t‚ÇÄ‚ÇÅ t‚ÇÅ‚ÇÇ ‚Üí
    pif_then_else_
      {C = Œª t‚ÇÄ ‚Üí if t‚ÇÄ then if t‚ÇÅ then ‚ä§p else ‚ä•p else (if t‚ÇÅ then ‚ä•p else ‚ä§p) ‚Üí if t‚ÇÅ then if t‚ÇÇ then ‚ä§p else ‚ä•p else (if t‚ÇÇ then ‚ä•p else ‚ä§p) ‚Üí if t‚ÇÄ then if t‚ÇÇ then ‚ä§p else ‚ä•p else (if t‚ÇÇ then ‚ä•p else ‚ä§p)}
      t‚ÇÄ
      (Œª x y ‚Üí 
        pif_then_else_
          {C = Œª t‚ÇÅ ‚Üí if t‚ÇÅ then ‚ä§p else ‚ä•p ‚Üí if t‚ÇÅ then if t‚ÇÇ then ‚ä§p else ‚ä•p else (if t‚ÇÇ then ‚ä•p else ‚ä§p) ‚Üí if t‚ÇÇ then ‚ä§p else ‚ä•p}
          t‚ÇÅ (Œª _ x ‚Üí x) (Œª ()) x y)
      (Œª x y ‚Üí
        pif_then_else_
          {C = Œª t‚ÇÅ ‚Üí if t‚ÇÅ then ‚ä•p else ‚ä§p ‚Üí if t‚ÇÅ then if t‚ÇÇ then ‚ä§p else ‚ä•p else (if t‚ÇÇ then ‚ä•p else ‚ä§p) ‚Üí if t‚ÇÇ then ‚ä•p else ‚ä§p}
          t‚ÇÅ (Œª ()) (Œª _ x ‚Üí x) x y)
      t‚ÇÄ‚ÇÅ
      t‚ÇÅ‚ÇÇ)
  (Œª _ t ‚Üí t)
  (Œª _ t ‚Üí pif_then_else_ {C = Œª t ‚Üí if t then (if t then ‚ä§p else ‚ä•p) else (if t then ‚ä•p else ‚ä§p)} t ttp ttp)

true    : ‚àÄ{i}{Œì : Con i} ‚Üí Tm Œì Bool
true = record { ‚à£_‚à£t = Œª _ ‚Üí tt }

false   : ‚àÄ{i}{Œì : Con i} ‚Üí Tm Œì Bool
false = record { ‚à£_‚à£t = Œª _ ‚Üí ff }

ite :
  ‚àÄ{i}{Œì : Con i}{j}(C : Ty (Œì ‚ñ∑ Bool) j)
      ‚Üí Tm Œì (C [ (_,_ id {A = Bool} true) ]T)
      ‚Üí Tm Œì (C [ (_,_ id {A = Bool} false) ]T)
      ‚Üí (t : Tm Œì Bool)
      ‚Üí Tm Œì (C [ (_,_ id {A = Bool} t) ]T)
ite {i}{Œì}{j} = Œª C u v t ‚Üí record {
  ‚à£_‚à£t = Œª Œ≥ ‚Üí if_then_else_ {C = Œª b ‚Üí ‚à£ C ‚à£T Œ≥ ,Œ£ b} (‚à£ t ‚à£t Œ≥) (‚à£ u ‚à£t Œ≥) (‚à£ v ‚à£t Œ≥) ;
  ~t = Œª {Œ≥}{Œ≥'} Œ≥~ ‚Üí 
    pif_then_else_
      {j}
      {C = Œª b ‚Üí (b~ : Bool {i}{Œì} T Œ≥~ ‚ä¢ b ~ ‚à£ t ‚à£t Œ≥') ‚Üí C T (Œ≥~ ,p b~) ‚ä¢ (if_then_else_ {C = Œª b ‚Üí ‚à£ C ‚à£T Œ≥ ,Œ£ b} b (‚à£ u ‚à£t Œ≥) (‚à£ v ‚à£t Œ≥)) ~ (if_then_else_ {C = Œª b ‚Üí ‚à£ C ‚à£T Œ≥' ,Œ£ b} (‚à£ t ‚à£t Œ≥') (‚à£ u ‚à£t Œ≥') (‚à£ v ‚à£t Œ≥'))}
      (‚à£ t ‚à£t Œ≥)
      (pif_then_else_ {C = Œª b ‚Üí (b~ : Bool {i}{Œì} T Œ≥~ ‚ä¢ tt ~ b) ‚Üí C T (Œ≥~ ,p b~) ‚ä¢ (‚à£ u ‚à£t Œ≥) ~ (if_then_else_ {C = Œª b ‚Üí ‚à£ C ‚à£T Œ≥' ,Œ£ b} b (‚à£ u ‚à£t Œ≥') (‚à£ v ‚à£t Œ≥'))} (‚à£ t ‚à£t Œ≥') (Œª _ ‚Üí ~t u Œ≥~) (Œª ()))
      (pif_then_else_ {C = Œª b ‚Üí (b~ : Bool {i}{Œì} T Œ≥~ ‚ä¢ ff ~ b) ‚Üí C T (Œ≥~ ,p b~) ‚ä¢ (‚à£ v ‚à£t Œ≥) ~ (if_then_else_ {C = Œª b ‚Üí ‚à£ C ‚à£T Œ≥' ,Œ£ b} b (‚à£ u ‚à£t Œ≥') (‚à£ v ‚à£t Œ≥'))} (‚à£ t ‚à£t Œ≥') (Œª ()) (Œª _ ‚Üí ~t v Œ≥~))
      (~t t Œ≥~)
       }
